name: Tag & Release on merge to main

on:
  pull_request:
    types: [closed]

jobs:
  tag-and-release:
    if: >
      github.event.pull_request.merged == true &&
      github.event.pull_request.base.ref == 'main' &&
      github.event.pull_request.head.ref == 'develop'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository at merge commit
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha }}
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Read package version
        id: pkg
        run: |
          VERSION=$(node -p "require('./package.json').version")
          if [ -z "$VERSION" ]; then
            echo "No se pudo leer la versiÃ³n de package.json" >&2
            exit 1
          fi
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Prepare release notes (fallback)
        id: notes
        run: |
          {
            echo "body<<EOF"
            echo "### Cambios incluidos"
            echo
            echo "- Merge de \`develop\` a \`main\`"
            echo "- Revisa el historial de commits para detalles"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: Create Git tag & GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ steps.pkg.outputs.version }}
          name: v${{ steps.pkg.outputs.version }}
          body: ${{ steps.notes.outputs.body }}
          draft: false
          prerelease: false
          generateReleaseNotes: true
